# version: v3.4.0

# context defines the context of this Desired State File.
# It is used to allow Helmsman identify which releases are managed by which DSF.
# Therefore, it is important that each DSF uses a unique context.
context: home-cloud-lab # defaults to "default" if not provided

# metadata -- add as many key/value pairs as you want
metadata:
  maintainer: "lordmuffin (dorkmeisterx69@gmail.com)"
  description: "This is used for my home-cloud-lab"

# paths to the certificate for connecting to the cluster
# You can skip this if you use Helmsman on a machine with kubectl already connected to your k8s cluster.
# you have to use exact key names here : 'caCrt' for certificate and 'caKey' for the key and caClient for the client certificate
# certificates:
#caClient: "gs://mybucket/client.crt" # GCS bucket path
#caCrt: "s3://mybucket/ca.crt" # S3 bucket path
#caKey: "../ca.key" # valid local file relative path

settings:
  kubeContext: "lke55605-ctx" # will try connect to this context first, if it does not exist, it will be created using the details below
  #username: "admin"
  #password: "$K8S_PASSWORD" # the name of an environment variable containing the k8s password
  #clusterURI: "$SET_URI" # the name of an environment variable containing the cluster API
  #clusterURI: "https://192.168.99.100:8443" # equivalent to the above
  #storageBackend: "secret"
  #slackWebhook:  "$slack" # or your slack webhook url
  #reverseDelete: false # reverse the priorities on delete
  #### to use bearer token:
  #  bearerToken: true
  #  clusterURI: "https://kubernetes.default"
  # globalHooks:
  #   successCondition: "Initialized"
  #   deleteOnSuccess: true
  #   postInstall: "job.yaml"
  globalMaxHistory: 10

# define your environments and their k8s namespaces
namespaces:
  default:
    protected: true

# define any private/public helm charts repos you would like to get charts from
# syntax: repo_name: "repo_url"
# only private repos hosted in s3 buckets are now supported
helmRepos:
  home-lab-charts: "https://raw.githubusercontent.com/lordmuffin/home-lab-charts/repo"
  #myS3repo: "s3://my-S3-private-repo/charts"
  #myGCSrepo: "gs://my-GCS-private-repo/charts"
  #custom:  "https://$user:$pass@mycustomrepo.org"

# define the desired state of your applications helm charts
# each contains the following:

apps:
  example:
    namespace: "default" # maps to the namespace as defined in namespaces above
    enabled: true # change to false if you want to delete this app release empty: false:
    chart: "home-lab-charts/example" # changing the chart name means delete and recreate this chart
    version: "0.1.0" # chart version
    ### Optional values below
    valuesFile: "" # leaving it empty uses the default chart values
    test: false
    protected: false
    priority: -3
  grocy:
    namespace: "default" # maps to the namespace as defined in namespaces above
    enabled: true # change to false if you want to delete this app release empty: false:
    chart: "home-lab-charts/grocy" # changing the chart name means delete and recreate this chart
    version: "0.1.1" # chart version
    ### Optional values below
    valuesFile: "./values/grocy.yaml" # leaving it empty uses the default chart values
    test: false
    protected: false
    priority: -1

# See https://github.com/Praqma/helmsman/blob/master/docs/desired_state_specification.md#apps for more apps options